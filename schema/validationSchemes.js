"use strict";module.exports = validate20;module.exports.default = validate20;const schema22 = {"$id":"accountPayload","type":"object","additionalProperties":false,"required":["accountList"],"properties":{"accountList":{"type":"array","minItems":1,"items":{"type":"object","required":["productType","productTypeDescription","productNumber","displayNumber","productImage","currencyProduct"],"additionalProperties":true,"properties":{"productType":{"type":"string","minLength":1},"productTypeDescription":{"type":"string","minLength":1},"productNumber":{"type":"integer","minimum":0},"displayNumber":{"type":"object","required":["formatedNumber"],"additionalProperties":true,"properties":{"formatedNumber":{"type":"string","minLength":1}}},"productImage":{"type":"string","minLength":1,"maxLength":256},"currencyProduct":{"type":"object","required":["alias"],"additionalProperties":true,"properties":{"alias":{"type":"string","minLength":2}}}}}}}};const func8 = require("ajv/dist/runtime/ucs2length").default;function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="accountPayload" */;let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.accountList === undefined) && (missing0 = "accountList")){validate20.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(key0 === "accountList")){validate20.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.accountList !== undefined){let data0 = data.accountList;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){if(data0.length < 1){validate20.errors = [{instancePath:instancePath+"/accountList",schemaPath:"#/properties/accountList/minItems",keyword:"minItems",params:{limit: 1},message:"must NOT have fewer than 1 items"}];return false;}else {var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){let data1 = data0[i0];const _errs4 = errors;if(errors === _errs4){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing1;if(((((((data1.productType === undefined) && (missing1 = "productType")) || ((data1.productTypeDescription === undefined) && (missing1 = "productTypeDescription"))) || ((data1.productNumber === undefined) && (missing1 = "productNumber"))) || ((data1.displayNumber === undefined) && (missing1 = "displayNumber"))) || ((data1.productImage === undefined) && (missing1 = "productImage"))) || ((data1.currencyProduct === undefined) && (missing1 = "currencyProduct"))){validate20.errors = [{instancePath:instancePath+"/accountList/" + i0,schemaPath:"#/properties/accountList/items/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data1.productType !== undefined){let data2 = data1.productType;const _errs7 = errors;if(errors === _errs7){if(typeof data2 === "string"){if(func8(data2) < 1){validate20.errors = [{instancePath:instancePath+"/accountList/" + i0+"/productType",schemaPath:"#/properties/accountList/items/properties/productType/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/accountList/" + i0+"/productType",schemaPath:"#/properties/accountList/items/properties/productType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid2 = _errs7 === errors;}else {var valid2 = true;}if(valid2){if(data1.productTypeDescription !== undefined){let data3 = data1.productTypeDescription;const _errs9 = errors;if(errors === _errs9){if(typeof data3 === "string"){if(func8(data3) < 1){validate20.errors = [{instancePath:instancePath+"/accountList/" + i0+"/productTypeDescription",schemaPath:"#/properties/accountList/items/properties/productTypeDescription/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/accountList/" + i0+"/productTypeDescription",schemaPath:"#/properties/accountList/items/properties/productTypeDescription/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid2 = _errs9 === errors;}else {var valid2 = true;}if(valid2){if(data1.productNumber !== undefined){let data4 = data1.productNumber;const _errs11 = errors;if(!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))){validate20.errors = [{instancePath:instancePath+"/accountList/" + i0+"/productNumber",schemaPath:"#/properties/accountList/items/properties/productNumber/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs11){if((typeof data4 == "number") && (isFinite(data4))){if(data4 < 0 || isNaN(data4)){validate20.errors = [{instancePath:instancePath+"/accountList/" + i0+"/productNumber",schemaPath:"#/properties/accountList/items/properties/productNumber/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}var valid2 = _errs11 === errors;}else {var valid2 = true;}if(valid2){if(data1.displayNumber !== undefined){let data5 = data1.displayNumber;const _errs13 = errors;if(errors === _errs13){if(data5 && typeof data5 == "object" && !Array.isArray(data5)){let missing2;if((data5.formatedNumber === undefined) && (missing2 = "formatedNumber")){validate20.errors = [{instancePath:instancePath+"/accountList/" + i0+"/displayNumber",schemaPath:"#/properties/accountList/items/properties/displayNumber/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {if(data5.formatedNumber !== undefined){let data6 = data5.formatedNumber;const _errs16 = errors;if(errors === _errs16){if(typeof data6 === "string"){if(func8(data6) < 1){validate20.errors = [{instancePath:instancePath+"/accountList/" + i0+"/displayNumber/formatedNumber",schemaPath:"#/properties/accountList/items/properties/displayNumber/properties/formatedNumber/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/accountList/" + i0+"/displayNumber/formatedNumber",schemaPath:"#/properties/accountList/items/properties/displayNumber/properties/formatedNumber/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}}}else {validate20.errors = [{instancePath:instancePath+"/accountList/" + i0+"/displayNumber",schemaPath:"#/properties/accountList/items/properties/displayNumber/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid2 = _errs13 === errors;}else {var valid2 = true;}if(valid2){if(data1.productImage !== undefined){let data7 = data1.productImage;const _errs18 = errors;if(errors === _errs18){if(typeof data7 === "string"){if(func8(data7) > 256){validate20.errors = [{instancePath:instancePath+"/accountList/" + i0+"/productImage",schemaPath:"#/properties/accountList/items/properties/productImage/maxLength",keyword:"maxLength",params:{limit: 256},message:"must NOT have more than 256 characters"}];return false;}else {if(func8(data7) < 1){validate20.errors = [{instancePath:instancePath+"/accountList/" + i0+"/productImage",schemaPath:"#/properties/accountList/items/properties/productImage/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}}else {validate20.errors = [{instancePath:instancePath+"/accountList/" + i0+"/productImage",schemaPath:"#/properties/accountList/items/properties/productImage/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid2 = _errs18 === errors;}else {var valid2 = true;}if(valid2){if(data1.currencyProduct !== undefined){let data8 = data1.currencyProduct;const _errs20 = errors;if(errors === _errs20){if(data8 && typeof data8 == "object" && !Array.isArray(data8)){let missing3;if((data8.alias === undefined) && (missing3 = "alias")){validate20.errors = [{instancePath:instancePath+"/accountList/" + i0+"/currencyProduct",schemaPath:"#/properties/accountList/items/properties/currencyProduct/required",keyword:"required",params:{missingProperty: missing3},message:"must have required property '"+missing3+"'"}];return false;}else {if(data8.alias !== undefined){let data9 = data8.alias;const _errs23 = errors;if(errors === _errs23){if(typeof data9 === "string"){if(func8(data9) < 2){validate20.errors = [{instancePath:instancePath+"/accountList/" + i0+"/currencyProduct/alias",schemaPath:"#/properties/accountList/items/properties/currencyProduct/properties/alias/minLength",keyword:"minLength",params:{limit: 2},message:"must NOT have fewer than 2 characters"}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/accountList/" + i0+"/currencyProduct/alias",schemaPath:"#/properties/accountList/items/properties/currencyProduct/properties/alias/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}}}else {validate20.errors = [{instancePath:instancePath+"/accountList/" + i0+"/currencyProduct",schemaPath:"#/properties/accountList/items/properties/currencyProduct/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid2 = _errs20 === errors;}else {var valid2 = true;}}}}}}}}else {validate20.errors = [{instancePath:instancePath+"/accountList/" + i0,schemaPath:"#/properties/accountList/items/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs4 === errors;if(!valid1){break;}}}}else {validate20.errors = [{instancePath:instancePath+"/accountList",schemaPath:"#/properties/accountList/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}}}}}else {validate20.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate20.errors = vErrors;return errors === 0;}